#!/bin/zsh
if [ -z "$1" ]
then
    echo "Please provide a react app name"
    exit 1
fi

# create react app
npx create-react-app $1
cd $1

# intialize git
git init

# remane files js-->jsx
rm src/App.js
touch src/App.jsx
echo "import React from 'react';
import './App.css';
import { Home } from './pages';

function App() {
  return (
    <div className='App'>
      <Home />
    </div>
  );
}
export default App;" > src/App.jsx
rm src/App.test.js
touch src/App.test.jsx
rm src/App.css
touch src/App.css


# install packages - eslint, prettier, jest
npm install eslint prettier eslint-config-prettier eslint-plugin-prettier jest --save-dev

# setup .eslintrc.json
npx eslint --init
echo '{
  "env": {
    "browser": true,
    "es2021": true
  },
  "extends": ["airbnb", "plugin:prettier/recommended"],
  "overrides": [],
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "plugins": ["react"],
  "rules": {
    "react/jsx-filename-extension": [
      1,
      {
        "extensions": [".js", ".jsx"]
      }
    ]
  }
}' > ./.eslintrc.json

# setup .prettierrc
touch .prettierrc
echo '{
  "trailingComma": "es5",
  "tabWidth": 2,
  "printWidth": 120,
  "semi": true,
  "singleQuote": true,
  "useTabs": false,
  "quoteProps": "as-needed",
  "jsxSingleQuote": false,
  "bracketSpacing": true,
  "jsxBracketSameLine": true,
  "arrowParens": "avoid",
  "requirePragma": false,
  "insertPragma": false,
  "proseWrap": "preserve",
  "endOfLine": "lf"
}' > ./.prettierrc

# setup assets folder
mkdir src/assets
mkdir src/assets/icons
mkdir src/assets/images

# setup components folder
mkdir src/components
touch src/components/index.js

# setup constants folder
mkdir src/constants
touch src/constants/apiEndPoints.js
touch src/constants/routes.js

# setup pages folder
mkdir src/pages
touch src/pages/index.js
echo "export { default as Home } from './Home';
export default '';" > src/pages/index.js
mkdir src/pages/Home
touch src/pages/Home/index.jsx
echo "import React from 'react';

function Home() {
  return (
    <div>
      <h1>Sample React App!</h1>
    </div>
  );
}

export default Home;" > src/pages/Home/index.jsx

# setup types folder
mkdir src/types

# setup utils folder
mkdir src/utils
mkdir src/utils/common
touch src/utils/common/index.js
mkdir src/utils/makeRequest
touch src/utils/makeRequest/index.js

# setup .vscode folder
mkdir .vscode
touch .vscode/settings.json
echo '{
  "eslint.alwaysShowStatus": true,
  "editor.formatOnSave": true,
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "[javascript]": {
    "editor.formatOnSave": false,
    "editor.defaultFormatter": null
  },
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": true,
    "eslint.autoFixOnSave": true
  }
}' > ./.vscode/settings.json

touch jest.config.js
echo 'module.exports = {
  transformIgnorePatterns: ['node_modules/(?!(axios)/)'],
};' > ./jest.config.js

# auto fix all eslint errors
npx eslint . --ext .js --fix

# commit intial set up for react app
git add .
git commit -m "chore: intial react app project set up"